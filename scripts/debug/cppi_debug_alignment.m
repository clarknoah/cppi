
init;
cppi = Cppi_Manipulator(1,1);
%Setting up the paths neccessary to automate comparing between nifti files
bk_root = '/home/noah/coax_external/backup/patrick_project';
bk_fs = [bk_root '/freesurfer/subjects/subjects/%s/'];
bk_subs = [bk_root '/subjects/subjects/%s/%s/%s'];

%18Jan17LL of code added to cppi_debug_alignment, I am trying to setup the code so that I can easily input three different variables so I donâ€™t have to constantly replace all of them throughout the script. 

m_root = '/home/noah/coax_external/patrick_project';
m_fs = [m_root '/freesurfer/subjects/subjects/%s/%s/%s'];
m_subs = [m_root '/subjects/subjects/%s/%s/%s'];

sub1 = '0006_1';
sub2 = '0006_1';
pt = 'perm_test';
roi = 'rois';

%ROIS Filenames (region)-(lateralization)-(status:org=original,cr=cropped,co=coreg)
m1_lh_org = 'lhBA4.nii';
m1_lh_cr = 'lhBA4_cropped.nii';
m1_lh_co = 'r_lhBA4_cropped.nii';
m1_rh_org = 'rhBA4.nii';
m1_rh_cr = 'rhBA4.cropped.nii';
m1_rh_co = 'r_rhBA4_cropped.nii';

s1_lh_org = 'lhBA123.nii';
s1_lh_cr = 'lhBA123_cropped.nii';
s1_lh_co = 'r_lhBA123_cropped.nii';
s1_rh_org = 'rhBA123.nii';
s1_rh_cr = 'rhBA123_cropped.nii';
s1_rh_co = 'r_rhBA123_cropped.nii';


%Seeds


%comparing original dimensions of ROI files from perm_test


%Original M1 Files
bk_m1_lh_org = load_untouch_nii(sprintf(...
    bk_subs,sub1,pt,m1_lh_org...
    ));
bk_m1_lh_cr = load_untouch_nii(sprintf(...
    bk_subs,sub1,roi,m1_lh_cr...
    ));
bk_m1_lh_co = load_untouch_nii(sprintf(...
    bk_subs,sub1,roi,m1_lh_co...
    ));
bk_m1_rh_org = load_untouch_nii(sprintf(...
    bk_subs,sub1,pt,m1_rh_org...
    ));
bk_m1_rh_cr = load_untouch_nii(sprintf(...
    bk_subs,sub1,roi,m1_rh_co...
    ));
bk_m1_rh_co = load_untouch_nii(sprintf(...
    bk_subs,sub1,roi,m1_rh_co...
    ));

%Original S1 Files
bk_s1_lh_org = load_untouch_nii(sprintf(...
    bk_subs,sub1,pt,s1_lh_org...
    ));
bk_s1_lh_cr = load_untouch_nii(sprintf(...
    bk_subs,sub1,roi,s1_lh_cr...
    ));
bk_s1_lh_co = load_untouch_nii(sprintf(...
    bk_subs,sub1,roi,s1_lh_co...
    ));
bk_s1_rh_org = load_untouch_nii(sprintf(...
    bk_subs,sub1,pt,s1_rh_org...
    ));
bk_s1_rh_cr = load_untouch_nii(sprintf(...
    bk_subs,sub1,roi,s1_rh_cr...
    ));
bk_s1_rh_co = load_untouch_nii(sprintf(...
    bk_subs,sub1,roi,s1_rh_co...
    ));


%Manipulated M1 Files
m_m1_lh_org = load_untouch_nii(sprintf(...
    m_subs,sub1,pt,m1_lh_org...
    ));
m_m1_lh_cr =  load_untouch_nii(sprintf(...
    m_subs,sub1,roi,m1_lh_cr...
    ));
m_m1_lh_co = load_untouch_nii(sprintf(...
    m_subs,sub1,roi,m1_lh_co...
    ));
m_m1_rh_org = load_untouch_nii(sprintf(...
    m_subs,sub1,pt,m1_rh_org...
    ));
m_m1_rh_cr = load_untouch_nii(sprintf(...
    m_subs,sub1,roi,m1_rh_co...
    ));
m_m1_rh_co = load_untouch_nii(sprintf(...
    m_subs,sub1,roi,m1_rh_co...
    ));

%Manipulated s1 Files
m_s1_lh_org = load_untouch_nii(sprintf(...
    m_subs,sub1,pt,s1_lh_org...
    ));
m_s1_lh_cr =  load_untouch_nii(sprintf(...
    m_subs,sub1,roi,s1_lh_cr...
    ));
m_s1_lh_co = load_untouch_nii(sprintf(...
    m_subs,sub1,roi,s1_lh_co...
    ));
m_s1_rh_org = load_untouch_nii(sprintf(...
    m_subs,sub1,pt,s1_rh_org...
    ));
m_s1_rh_cr = load_untouch_nii(sprintf(...
    m_subs,sub1,roi,s1_rh_co...
    ));
m_s1_rh_co = load_untouch_nii(sprintf(...
    m_subs,sub1,roi,s1_rh_co...
    ));

%M1 Comparison
cppi.quick_display_overlap(bk_m1_lh_org,m_m1_lh_org,'BK vs Mani (M1 original)');
cppi.compare_nii_mask(bk_m1_lh_org,m_m1_lh_org);

cppi.quick_display_overlap(bk_m1_lh_cr,m_m1_lh_cr,'BK vs Mani (M1 cropped)');
cppi.compare_nii_mask(bk_m1_lh_cr,m_m1_lh_cr);

cppi.quick_display_overlap(bk_m1_lh_co,m_m1_lh_co,'BK vs Mani (M1 coreg)');
cppi.compare_nii_mask(bk_m1_lh_co,m_m1_lh_co);


%S1 Comparison
cppi.quick_display_overlap(bk_s1_lh_org,m_s1_lh_org,'BK vs Mani (s1 original)');
cppi.compare_nii_mask(bk_s1_lh_org,m_s1_lh_org);

cppi.quick_display_overlap(bk_s1_lh_cr,m_s1_lh_cr,'BK vs Mani (s1 cropped)');
cppi.compare_nii_mask(bk_s1_lh_cr,m_s1_lh_cr);

cppi.quick_display_overlap(bk_s1_lh_co,m_s1_lh_co,'BK vs Mani (s1 coreg)');
cppi.compare_nii_mask(bk_s1_lh_co,m_s1_lh_co);